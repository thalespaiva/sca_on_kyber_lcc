#pragma once

#define NAN_INT 10000
#define MAX_VALID_NOISY_COEFF 400
#define MIN_VALID_NOISY_COEFF -400

#ifndef SIMULATE_ATTACK_ON_MASKED_IMPLEMENTATION

// Matrices below are the output of the following command
// $ ./build_bias_matrices 100000
int MAX_NOISY_COEFF_FOR_SHARES_HWS[17] = {
   0,  256,  320,  328,  338,  351,  324,  319,  316,  251,  253,  254,  -16,   -8,   -4,   -2,   -1
};
int MIN_NOISY_COEFF_FOR_SHARES_HWS[17] = {
   0,    1, -257, -256, -254, -250, -352, -357, -314, -338, -319, -332, -324, -305, -321, -257,   -1
};

#else

// Matrices below are the output of the following command
// ./build_bias_matrices_masked 100000
int MAX_NOISY_COEFF_FOR_SHARES_HWS[17][17] = {
    {    0,  128,  160,  208,  202,  214,  250,  127, -2147483648, -128,  -64,  -32,  -16,   -8,   -4,   -2,   -1 },
    {  128,  160,  208,  226,  267,  305,  251,  231,  256,  200,  198,  214,  241,  236,  190,  127,  127 },
    {  192,  196,  232,  244,  263,  266,  255,  256,  222,  253,  230,  236,  250,  270,  255,  255,  191 },
    {  168,  212,  261,  268,  285,  273,  277,  280,  272,  257,  265,  280,  269,  258,  249,  227,  175 },
    {  216,  214,  287,  277,  260,  292,  301,  293,  276,  322,  287,  317,  298,  280,  243,  216,  194 },
    {  244,  256,  263,  282,  297,  303,  288,  279,  276,  274,  291,  309,  287,  284,  295,  239,  217 },
    {  215,  254,  242,  262,  289,  284,  288,  283,  299,  276,  318,  283,  305,  279,  264,  243,  192 },
    {  194,  235,  251,  272,  281,  274,  272,  300,  268,  281,  285,  290,  291,  286,  294,  251,  196 },
    {  233,  234,  252,  285,  296,  276,  288,  264,  261,  267,  281,  290,  301,  277,  251,  222,  216 },
    {  220,  238,  276,  267,  273,  290,  279,  267,  264,  261,  279,  262,  263,  251,  225,  234,  219 },
    {  126,  254,  255,  249,  291,  285,  270,  280,  275,  242,  302,  246,  281,  253,  229,  235,   -3 },
    {  -32,  205,  252,  241,  257,  295,  274,  272,  285,  262,  253,  237,  229,  240,  233,  125,  -33 },
    {  -16,  228,  236,  266,  273,  283,  279,  261,  266,  245,  217,  241,  225,  220,  125,  -18,  -17 },
    {   -8,  217,  237,  256,  278,  276,  285,  300,  244,  249,  191,  240,  217,  127,  127,  -10,   -9 },
    {   -4,  222,  227,  291,  271,  251,  242,  237,  254,  190,  172,   94,  119,  191,   -8,   -6,   -5 },
    {   -2,  127,  207,  272,  245,  230,  217,  244,  190,   -2,   -2,  -34,  -18,  -10,   -6,   -4,   -3 },
    {   -1,  127,  143,  195,  183,  219,  206,  190, -2147483648, -129,  -65,  -33,  -17,   -9,   -5,   -3,   -2 }
};
int MIN_NOISY_COEFF_FOR_SHARES_HWS[17][17] = {
    {    0,    1,    3,    7,   15,   31,   63,  127, 2147483647, -224, -222, -206, -213, -194, -193, -129,   -1 },
    {    1,    2, -129, -240, -215, -197, -195, -162, -298, -238, -243, -239, -225, -237, -257, -129,    0 },
    {    3, -193, -209, -243, -225, -229, -269, -234, -267, -246, -256, -283, -250, -261, -232, -193,    2 },
    { -129, -209, -256, -246, -251, -271, -269, -256, -290, -280, -304, -305, -288, -273, -256, -258,   -2 },
    { -221, -240, -239, -250, -283, -279, -294, -288, -294, -266, -287, -288, -292, -266, -272, -220, -186 },
    { -229, -239, -281, -281, -319, -296, -292, -293, -277, -304, -286, -291, -276, -279, -257, -237, -208 },
    { -204, -217, -285, -268, -289, -284, -282, -296, -276, -300, -290, -291, -286, -284, -282, -245, -200 },
    { -198, -300, -261, -265, -281, -278, -275, -279, -273, -289, -280, -303, -259, -281, -274, -219, -211 },
    { -162, -285, -276, -276, -282, -279, -298, -303, -271, -281, -266, -298, -260, -298, -235, -227, -147 },
    { -192, -250, -290, -270, -274, -283, -252, -244, -290, -265, -259, -267, -274, -235, -217, -278, -241 },
    { -239, -250, -285, -282, -267, -270, -303, -281, -259, -283, -263, -256, -277, -264, -282, -208, -223 },
    { -219, -226, -247, -276, -272, -283, -268, -284, -243, -246, -245, -290, -251, -293, -248, -239, -232 },
    { -185, -209, -256, -259, -251, -263, -245, -295, -243, -227, -277, -273, -271, -261, -250, -222, -214 },
    { -169, -261, -262, -256, -257, -246, -246, -228, -214, -217, -246, -246, -282, -239, -235, -234, -198 },
    { -161, -209, -251, -264, -252, -237, -238, -206, -210, -198, -249, -253, -245, -246, -234, -198, -138 },
    { -129, -193, -193, -217, -222, -203, -211, -198, -162, -257, -256, -239, -250, -277, -270, -162, -258 },
    {   -1,    0,    2,    6,   14,   30,   62,  126, 2147483647, -129, -191, -187, -180, -195, -194,  -66,   -2 }
};









#endif